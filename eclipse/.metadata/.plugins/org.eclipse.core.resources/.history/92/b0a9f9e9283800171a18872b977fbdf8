package com.draganz.commandinfo.commands;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

import com.draganz.commandinfo.api.CommandInfoAPI;

import net.minecraft.command.CommandBase;
import net.minecraft.command.CommandException;
import net.minecraft.command.ICommand;
import net.minecraft.command.ICommandSender;
import net.minecraft.server.MinecraftServer;
import net.minecraft.util.math.BlockPos;
import scala.actors.threadpool.Arrays;

public class CmdInitial extends CommandBase{

	@Override
	public String getName() {
		return "commandInfo";
	}
	
	@Override
	public String getUsage(ICommandSender sender) {
		return "commands.commandinfo.base.usage";
	}
	
	@Override
	public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException {
		
		if(args.length >= 1){
			for(CommandBase cmd : CommandInfoAPI.getCommands()){
				if(cmd.getName().equalsIgnoreCase(args[0]) && cmd.checkPermission(server, sender)){
					cmd.execute(server, sender, args);
				}
			}
		}
		
	}
	
	@Override
	public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args,
			BlockPos targetPos) {
		if(args.length == 1){
			return getListOfStringsMatchingLastWord(args, CommandInfoAPI.getCommandMethods());
		}else{
			for(CommandBase cmd : CommandInfoAPI.getCommands()){
				if(cmd.getName().equalsIgnoreCase(args[0])){
					return cmd.getTabCompletions(server, sender, args, targetPos);
				}
			}
		}
		
		System.out.println("called");
		return Collections.<String>emptyList();
	}
	
}
