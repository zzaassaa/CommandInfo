package com.draganz.commandinfo.streamio;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.LinkedHashMap;
import java.util.Map;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.JsonParseException;

public class FileIO {

	private final Map<String, String> CMD_INFO;
	
	public static File MC_INFO_FILE;
	
	private static final Type MAP_TYPE = new TypeToken< Map<String, String> >(){}.getType();
		
	public static final Gson GSON = new Gson();
	
	public FileIO(){
		CMD_INFO = new LinkedHashMap();
	}
	
	public static void writeMapToFile(Map<String, String> map, File file){
		writeFile(file, GSON.toJson(map, MAP_TYPE));
	}
	
	public static Map<String, String> readMapFromFile(File file) throws FileNotFoundException{
		Map<String, String> map = new LinkedHashMap();
		
		try{
			map = GSON.fromJson(readFromFile(file), MAP_TYPE);
		}catch(JsonParseException e){
			e.printStackTrace();
		}
		
		return map;
	}
	
	private static void writeFile(File file, String contents){
		if(file != null){
			file.getParentFile().mkdirs();
			File inProcess = new File(file.getAbsolutePath().concat("_cnst"));
			
			if(inProcess.exists()) inProcess.delete();
			
			try(BufferedWriter bw = new BufferedWriter(new FileWriter(inProcess))){
				bw.write(contents);
				bw.close();
			}catch(IOException e){
				e.printStackTrace();
			}
			
			if(file.exists()) file.delete();
			
			inProcess.renameTo(file);
		}
	}
	
}
